#debug

#makeNextOrderCodeStackProof
#enterCodeStack

#makeNextOrderCodeStackProof
#exitCodeStack

#makeNextOrderCodeStackProof
#pushNextOrderToCodeStack

#makeNextOrderCommentProof
#exitComment


#enterTypeStack
#exitTypeStack

#enterTypeStack
#exitTypeStack

#enterCodeStack
#enterTypeStack
#exitCodeStack

#assignNextIdentifier
[


#enterTypeStack
#exitTypeStack

#enterTypeStack
#exitTypeStack

#enterCodeStack
#exitTypeStack
#exitCodeStack

#assignNextIdentifier
]

[ ] [ ]

#enterCodeStack
#pushNextOrderToCodeStack
#enterCodeStack
#exitCodeStack

#assignNextIdentifier
{

#makeNextOrderCodeStackProof {


[ ] [ ]

#enterCodeStack
#pushNextOrderToCodeStack
#exitCodeStack
#exitCodeStack

#assignNextIdentifier
}

#makeNextOrderCodeStackProof }


[ ] [ ]  { #assignNextIdentifier } #assignNextIdentifier ->

[ ] [ ] { #enterComment } -> /*
[ ] [ ] { #exitComment } -> */

#makeNextOrderCommentProof */

[ ] [ ] {"
"}  -> ;

[ ] [ ] { [ ] [ ] -> } -> >>

{ #debug } >> debug

/*
debug
debug */


{"rax"} >> rax
{"$5"} >> 5
{"mov " rax ", " 5 } >> mov 


mov ;