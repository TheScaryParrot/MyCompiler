#enterOrderQueue "../qhsLib/lib.qhs" #exitOrderQueue #include 

/* This is deliberately written in a way that uses as many different features as possible */

int mod ( int a , int b )
{
    int localA = a ;
    int localB = b ;

    [ "4" ]
    while ( localA >= localB )
    {
        [ localA ] -= localB ;
    }

    return = localA ;
}

bool isPrime ( int n )
{
    bool result = "0" ;

    [ "4" ]
    if ( n <= "1" )
    {
        [ result ] = "0" ;
        return = result ;
    }
    [ "4" ]
    else
    {
        int i = "2" ;

        [ "4" ]
        while ( i * i <= n )
        {
            mod ( n , i ) ;
            [ "4" ]
            if ( "eax" == "0" )
            {
                [ result ] = "0" ;
                return = result ;
            }

            [ i ] += "1" ;
        }

        [ result ] = "1" ;
        return = result ;
    }

    return = result ;
}

void printDigit ( int n )
{
    [ n ] += "48" ;
    [ n ?! int.size ] print ;

    return ;
}

void printInt ( int n )
{
    mod ( n , "10" ) ;
    int digit = "eax" ;

    [ n ] -= digit ;
    [ n ] /= "10" ;

    [ "4" ]
    if ( n > "0" )
    {
        printInt ( n ) ;
    }

    printDigit ( digit ) ;

    return ;
}

start
{
    int checkUntil = "1000000" ;

    int i = "0" ;

    [ "4" ]
    while ( i < checkUntil )
    {
        isPrime ( i ) ;
        [ "1" ]
        if ( "al" )
        {
            printInt ( i ) ;
            [ "10" "4" ] print ; /* print newline */
        }

        [ i ] += "1" ;
    }

    exit ;
}