final inline int int1 = 1;

final bool bool1 = true;

inline float float1 = 2.0;

final float float2 = float1 * (5.0 + 1.0) / 7.0;

bool bool2 = true && false;

bool bool3;
float float3;

// char char1 = 'a';


typedef
{
    int intProp;
    bool boolProp;
    float floatProp;
} MyType;



// MyType myType1 = {1, true, 1.0, 'a'};

// final MyType myType2 = {int1, bool1, float1, char1};

bool Hello(bool a, bool b)
{
    bool a2 = a;
    bool b2 = b;

    return a2 && b2;
}

int Hello2(int a, int b)
{
    int a2 = a;
    int b2 = b;

    return a2 + b2;
}

int _start(/*int argc, char argv*/)
{
    final inline int int1 = 2;
    int int2 = int1 + 64;
    MyType myType3 = {int1, bool1, float1};

    /*if (myType1.intProp == myType2.intProp)
    {
        return 1;
    }
    else
    {
        myType1.intProp = myType3.intProp;
    }

    while (myType1.boolProp)
    {
        myType1.boolProp = false;
    }

    for (int i = 0; i < 10; i++;)
    {
        myType1.floatProp += 1.0;
    }

    */

    float float2 = myType3.floatProp;

    // trying calls

    Hello(bool1, bool2);

    Hello2(int1, int2);
}